{"version":3,"sources":["App.js","Display.js","serviceWorker.js","index.js"],"names":["App","state","operation","flip","num1","num2","answer","clearCount","setState","signChange","includes","prevState","replace","addNumberToCount","event","innerText","target","length","addDecimal","num1Dots","num2Dots","i","operations","sign","equate","eval","getPercentage","num","parseFloat","toString","className","this","onClick","React","Component","Display","props","display","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e1f4a4c9.chunk.js","sourcesContent":["import React from 'react';\nimport Display from './Display';\nimport \"./App.css\";\n\nclass App extends React.Component {\n  state = {\n    operation: \"\",\n    flip: false,\n    num1: \"\",\n    num2: \"\",\n    answer: 0\n  }\n\n  clearCount = () => {\n    this.setState({num1: \"\", num2: \"\", flip: false, answer: 0});\n  }\n\n  signChange = () => {\n    if(!this.state.flip && this.state.num1 !== \"\"){\n      if(this.state.num1.includes(\"-\")){\n        this.setState(prevState => ({num1: `${prevState.num1.replace('-', '')}`}))\n      } else {\n        this.setState(prevState => ({num1: `-${prevState.num1}`}))\n      }\n\n    } else if(this.state.flip && this.state.num2 !== \"\"){\n      if(this.state.num2.includes(\"-\")){\n        this.setState(prevState => ({num2: `${prevState.num2.replace('-', '')}`}))\n      } else {\n        this.setState(prevState => ({num2: `-${prevState.num2}`}))\n      }\n    }\n\n  }\n\n  addNumberToCount = (event) => {\n    const {innerText} = event.target;\n\n    this.setState(prevState => {\n      if(this.state.num1.length < 10 && !this.state.flip && this.state.num1 !== \"0\"){\n        return {\n          num1 : `${prevState.num1}${innerText}`,\n          answer: 0\n        }\n      } else if(this.state.num2.length < 10 && this.state.flip && this.state.num2 !== \"0\"){\n        return {\n          num2 : `${prevState.num2}${innerText}`,\n          answer: 0\n        }\n      }\n    })\n  }\n\n  addDecimal = (event) => {\n    const {innerText} = event.target;\n    let num1Dots = 0;\n    let num2Dots = 0;\n\n    for (let i = 0; i < this.state.num1.length; i++) {\n      if(this.state.num1[i] === \".\"){\n        num1Dots++;\n      }\n    }\n\n    for (let i = 0; i < this.state.num2.length; i++) {\n      if(this.state.num2[i] === \".\"){\n        num2Dots++;\n      }\n    }\n\n    this.setState(prevState => {\n      if(this.state.num1 === \"\"){\n        return {\n          num1 : `0${innerText}`,\n          answer: 0\n        }\n      }\n      if(this.state.num2 === \"\"){\n        return {\n          num2 : `0${innerText}`,\n          answer: 0\n        }\n      }\n      if(num1Dots < 1 && !this.state.flip) {\n        return {\n          num1 : `${prevState.num1}${innerText}`,\n          answer: 0\n        }\n      } else if(num2Dots < 1 && this.state.flip) {\n        return {\n          num2 : `${prevState.num2}${innerText}`,\n          answer: 0\n        }\n      } else {\n        return null;\n      }\n\n    });\n  }\n\n\n  operations = (event) => {\n    const {innerText} = event.target;\n\n    this.setState(prevState => {\n      let sign;\n      if(innerText === \"X\"){\n        sign = \"*\";\n      }\n      if(innerText === \"รท\"){\n        sign = \"/\";\n      }\n      if(innerText === \"-\"){\n        sign = \"-\"\n      }\n      if(innerText === \"+\"){\n        sign = \"+\"\n      }\n      return {\n        operation: sign,\n        flip: true\n      }\n    })\n  }\n\n  equate = () => {\n    const num1 = this.state.num1;\n    const num2 = this.state.num2;\n    const sign = this.state.operation;\n    if(num1 !== \"\" && num2 !== \"\"){\n      const answer = eval(num1 + sign + num2);\n      this.setState({flip: false, num1: \"\", num2 : \"\", answer: answer});\n    }\n  }\n\n  getPercentage = () => {\n    let num;\n    if(!this.state.flip && this.state.num1 !== \"\"){\n      num = (parseFloat(this.state.num1) / 100).toString();\n      this.setState({num1: num});\n    } else if(this.state.flip && this.state.num2 !== \"\"){\n      num = (parseFloat(this.state.num1) / 100).toString();\n      this.setState({num2: num});\n    }\n\n  }\n\n\n  render(){\n    return (\n      <div className=\"main-grid\">\n        <Display answer={this.state.answer} flip={this.state.flip} num1={this.state.num1} num2={this.state.num2}/>\n        <div onClick={this.clearCount} className=\"button\">\n          <h1>AC</h1>\n        </div>\n        <div onClick={this.signChange} className=\"button\">\n          <h1>+/-</h1>\n        </div>\n        <div onClick={this.getPercentage} className=\"button\">\n          <h1>%</h1>\n        </div>\n        <div onClick={this.operations} className=\"button column-4\">\n          <h1>รท</h1>\n        </div>\n        <div onClick={this.addNumberToCount} className=\"button\">\n          <h1>7</h1>\n        </div>\n        <div onClick={this.addNumberToCount} className=\"button\">\n          <h1>8</h1>\n        </div>\n        <div onClick={this.addNumberToCount} className=\"button\">\n          <h1>9</h1>\n        </div>\n        <div onClick={this.operations} className=\"button column-4\">\n          <h1>X</h1>\n        </div>\n        <div onClick={this.addNumberToCount} className=\"button\">\n          <h1>4</h1>\n        </div>\n        <div onClick={this.addNumberToCount} className=\"button\">\n          <h1>5</h1>\n        </div>\n        <div onClick={this.addNumberToCount} className=\"button\">\n          <h1>6</h1>\n        </div>\n        <div onClick={this.operations} className=\"button column-4\">\n          <h1>-</h1>\n        </div>\n        <div onClick={this.addNumberToCount} className=\"button\">\n          <h1>1</h1>\n        </div>\n        <div onClick={this.addNumberToCount} className=\"button\">\n          <h1>2</h1>\n        </div>\n        <div onClick={this.addNumberToCount} className=\"button\">\n          <h1>3</h1>\n        </div>\n        <div onClick={this.operations} className=\"button column-4\">\n          <h1>+</h1>\n        </div>\n        <div onClick={this.addNumberToCount} className=\"button zero\">\n          <h1>0</h1>\n        </div>\n        <div onClick={this.addDecimal} className=\"button\">\n          <h1>.</h1>\n        </div>\n        <div onClick={this.equate} className=\"button column-4\">\n          <h1>=</h1>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\r\n\r\nfunction Display(props){\r\n  let display;\r\n  if(props.flip) {\r\n    display = props.num2;\r\n  } else {\r\n    display = props.num1;\r\n  }\r\n\r\n  return (\r\n    <div className=\"display\">\r\n      <h1 className=\"count\">{display.length === 0 ? props.answer : display}</h1>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Display;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}